---

- ec2_remote_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region:           "{{ aws_region }}"
    filters:
      instance-state-name: running
  register: proxy_instances

- name: Add proxy to dynamic host group
  add_host:
    name: "{{ item.tags.Name }}"
    groupname: gatewayed
    ansible_ssh_host: "{{ item.private_ip_address }}"
    ansible_user: centos
  with_items: "{{ proxy_instances.instances }}"

- name: install haproxy
  become: yes
  yum: name=haproxy state=present

- name: install libselinux-python
  become: yes
  yum: name=libselinux-python state=present

- name: start haproxy
  become: yes
  service: name=haproxy state=started

- ec2_remote_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region:           "{{ aws_region }}"
    filters:
       instance-state-name: running
  register: target_proxy_instances

- name: Copy haproxy config
  become: yes
  template:
      src=haproxy.cfg.j2
      dest=/etc/haproxy/haproxy.cfg
      mode=755

- name: Set Selinux to allow outbound access
  seport: ports=8153 proto=tcp setype=http_port_t state=present
  become: yes

- name: Set Selinux to allow outbound access
  seport: ports=9050-9099 proto=tcp setype=http_port_t state=present
  become: yes

- ec2_remote_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region:           "{{ aws_region }}"
    filters:
       instance-state-name: running
       'tag:role': 'build-server'
  register: bahmni_server_instances

- name: Add go server
  become: yes
  replace:
    dest: /etc/haproxy/haproxy.cfg
    regexp: '^backend ci[\s\S]* server ci \d+\.\d+\.\d+\.\d+\:\d+\s*$'
    replace: "backend ci \n redirect scheme https if !{ ssl_fc } \n mode http \n server ci {{bahmni_server_instances.instances[0].private_ip_address}}:8153\n"

- name: Restart haproxy
  become: yes
  service: name=haproxy state=reloaded
